<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.securitytest.dao.WorkOrderMapper">
  <resultMap id="BaseResultMap" type="com.example.securitytest.model.WorkOrder">
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="order_state" jdbcType="TINYINT" property="orderState" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, activity_id, goods_id, price, count, user_name, order_state
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from work_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from work_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.securitytest.model.WorkOrder">
    insert into work_order (order_id, activity_id, goods_id,
      price, count, user_name,
      order_state)
    values (#{orderId,jdbcType=BIGINT}, #{activityId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT},
      #{price,jdbcType=BIGINT}, #{count,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
      #{orderState,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.example.securitytest.model.WorkOrder">
    insert into work_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="orderState != null">
        order_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        #{orderState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.securitytest.model.WorkOrder">
    update work_order
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="orderState != null">
        order_state = #{orderState,jdbcType=TINYINT},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.securitytest.model.WorkOrder">
    update work_order
    set activity_id = #{activityId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      count = #{count,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      order_state = #{orderState,jdbcType=TINYINT}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>
