<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.securitytest.dao.ActivityGoodsMapper">
  <resultMap id="BaseResultMap" type="com.example.securitytest.model.ActivityGoods">
    <id column="activity_id" jdbcType="BIGINT" property="activityId" />
    <id column="goods_id" jdbcType="BIGINT" property="goodsId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="BIGINT" property="price" />
    <result column="inventory" jdbcType="INTEGER" property="inventory" />
  </resultMap>
  <sql id="Base_Column_List">
    activity_id, goods_id, num, price, inventory
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.example.securitytest.model.ActivityGoodsKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from activity_goods
    where activity_id = #{activityId,jdbcType=BIGINT}
      and goods_id = #{goodsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.example.securitytest.model.ActivityGoodsKey">
    delete from activity_goods
    where activity_id = #{activityId,jdbcType=BIGINT}
      and goods_id = #{goodsId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.securitytest.model.ActivityGoods">
    insert into activity_goods (activity_id, goods_id, num,
      price, inventory)
    values (#{activityId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, #{num,jdbcType=INTEGER},
      #{price,jdbcType=BIGINT}, #{inventory,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.securitytest.model.ActivityGoods">
    insert into activity_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="inventory != null">
        inventory,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="activityId != null">
        #{activityId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=BIGINT},
      </if>
      <if test="inventory != null">
        #{inventory,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.securitytest.model.ActivityGoods">
    update activity_goods
    <set>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="inventory != null">
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
    </set>
    where activity_id = #{activityId,jdbcType=BIGINT}
      and goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.securitytest.model.ActivityGoods">
    update activity_goods
    set num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=BIGINT},
      inventory = #{inventory,jdbcType=INTEGER}
    where activity_id = #{activityId,jdbcType=BIGINT}
      and goods_id = #{goodsId,jdbcType=BIGINT}
  </update>
</mapper>
